Class:

enum: coimparision type (best matching file(multiple results), maximal single match, only same name(multiple results))


class code_file: filename, string, filtered string

unordered_map: gruppennummer -> code_file
unordered_set<int, unordered_map<int, double>>: matches as double
comparisionAlgo: filter + comparision algo

methods:


select_comparision-type: enum
add files:  filename + string + group number
add algo: pointer to algo object
calculate matchmsatrix: run everything

Idea: scale EVERY method down to [0,1]:
longest match: log(match length)/log(min. textlengths)

harder: 
collect everything via boot or something and add to comparison object

